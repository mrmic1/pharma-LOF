geom_sf(data = BT_poly_epsg32634, fill = NA, color = "blue") +
geom_sf(data = BT_rec_locs, aes(color = "red")) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_minimal()
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "blue") +
geom_sf(data = BT_rec_locs, aes(color = "red")) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_minimal()
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "blue") +
geom_sf(data = BT_rec_locs, aes(color = "red")) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw()
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "blue", lwd = 2<) +
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "blue", lwd = 2) +
geom_sf(data = BT_rec_locs, aes(color = "red")) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw()
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "blue", lwd = 1.5) +
geom_sf(data = BT_rec_locs, aes(color = "red")) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw()
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "blue", lwd = 1.2) +
geom_sf(data = BT_rec_locs, aes(color = "red")) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw()
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1.2) +
geom_sf(data = BT_rec_locs, aes(color = "red")) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw()
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red")) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw()
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw()
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = element_blank()
))
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = element_blank()
)
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = 'none'
))
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = "none"))
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = "none")
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
coord_sf(label_graticule = "SW", label_axes = "SW",
xlim = c(st_bbox(BT_poly_epsg32634)["xmin"], st_bbox(BT_poly_epsg32634)["xmax"]),
ylim = c(st_bbox(BT_poly_epsg32634)["ymin"], st_bbox(BT_poly_epsg32634)["ymax"]),
crs = st_crs(BT_poly_epsg32634),
datum = st_crs(BT_poly_epsg32634),
expand = FALSE) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(angle = 45, hjust = 1))
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
coord_sf(label_graticule = "SW", label_axes = "SW",
xlim = c(st_bbox(BT_poly_epsg32634)["xmin"], st_bbox(BT_poly_epsg32634)["xmax"]),
ylim = c(st_bbox(BT_poly_epsg32634)["ymin"], st_bbox(BT_poly_epsg32634)["ymax"]),
crs = st_crs(BT_poly_epsg32634),
datum = st_crs(BT_poly_epsg32634),
expand = FALSE) +
theme_bw() +
theme(legend.position = "none")
print(p)
# Customizing the coordinate labels to display only 2 decimal places
library(scales)
p + scale_x_continuous(labels = number_format(accuracy = 0.01)) +
scale_y_continuous(labels = number_format(accuracy = 0.01))
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = "none")
print(p)
# Customizing the coordinate labels to display only 2 decimal places
library(scales)
p + scale_x_continuous(labels = number_format(accuracy = 0.01)) +
scale_y_continuous(labels = number_format(accuracy = 0.01))
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
scale_x_continuous(breaks = c(bbox["xmin"], bbox["xmax"]),
labels = c(round(bbox["xmin"], 2), round(bbox["xmax"], 2))) +
scale_y_continuous(breaks = c(bbox["ymin"], bbox["ymax"]),
labels = c(round(bbox["ymin"], 2), round(bbox["ymax"], 2))) +
theme_bw() +
theme(legend.position = "none")
# Get the bounding box of the polygon to set the axis limits
bbox <- st_bbox(BT_poly_epsg32634)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
scale_x_continuous(breaks = c(bbox["xmin"], bbox["xmax"]),
labels = c(round(bbox["xmin"], 2), round(bbox["xmax"], 2))) +
scale_y_continuous(breaks = c(bbox["ymin"], bbox["ymax"]),
labels = c(round(bbox["ymin"], 2), round(bbox["ymax"], 2))) +
theme_bw() +
theme(legend.position = "none")
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = "none")
print(p)
# Create the base ggplot
p <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = "none",
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"))
print(p)
# Create the base ggplot
lake_BT_trace <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = "none",
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"))
print(p)
save_plot_path = "./images/traces/"
#save image
ggsave(filename = paste0(save_plot_path, "lake_BT_trace.png"), plot = lake_BT_trace, height = 20, width = 15, unit = 'cm', dpi = 300)
#save image
ggsave(filename = paste0(save_plot_path, "lake_BT_trace.png"), plot = lake_BT_trace, height = 20, width = 20, unit = 'cm', dpi = 300)
#load BT drone image
BT_drone_img <- readPNG(paste0(image_path, "Lake BT_drone_1_ang.png"))
# Create the base ggplot
lake_BT_trace <-
ggplot() +
annotation_raster(lake_image, xmin = bbox["xmin"], xmax = bbox["xmax"],
ymin = bbox["ymin"], ymax = bbox["ymax"])
# Create the base ggplot
lake_BT_trace <-
ggplot() +
annotation_raster(BT_drone_img, xmin = bbox["xmin"], xmax = bbox["xmax"],
ymin = bbox["ymin"], ymax = bbox["ymax"]) +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = "none",
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"))
print(lake_BT_trace)
#save image
ggsave(filename = paste0(save_plot_path, "lake_BT_trace.png"), plot = lake_BT_trace, height = 20, width = 20, unit = 'cm', dpi = 300)
# Create the base ggplot
lake_BT_trace <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = "none",
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"))
print(lake_BT_trace)
# Create the base ggplot
lake_BT_trace_full <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = "none",
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"))
print(lake_BT_trace)
#save image
ggsave(filename = paste0(save_plot_path, "lake_BT_trace_full.png"), plot = lake_BT_trace, height = 20, width = 20, unit = 'cm', dpi = 300)
# Create the lake outline and receiver locations plot separately
lake_BT_trace <- lake_BT_trace_full +
annotation_scale(location = "none") +
annotation_north_arrow(location = "none")
print(lake_BT_trace)
# Create the base ggplot
lake_BT_trace_full <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none'
)
print(lake_BT_trace)
# Create the base ggplot
lake_BT_trace_full <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none'
)
print(lake_BT_trace)
print(lake_BT_trace_full)
# Create the base ggplot
lake_BT_trace_full <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none'
)
print(lake_BT_trace_full)
#save image
ggsave(filename = paste0(save_plot_path, "lake_BT_trace_full.png"), plot = lake_BT_trace, height = 20, width = 20, unit = 'cm', dpi = 300)
#save image
ggsave(filename = paste0(save_plot_path, "lake_BT_trace_full.png"), plot = lake_BT_trace_full, height = 20, width = 20, unit = 'cm', dpi = 300)
# Create the lake outline and receiver locations plot separately
lake_BT_trace <- lake_BT_trace_full +
annotation_scale(location = "none") +
annotation_north_arrow(location = "none")
print(lake_BT_trace)
# Create the base ggplot
lake_BT_trace_full <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
# annotation_scale(location = "bl", width_hint = 0.5) +
# annotation_north_arrow(location = "tl", which_north = "true",
#                        pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
#                        style = north_arrow_fancy_orienteering) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none'
)
print(lake_BT_trace_full)
# Create the plot for the north compass separately
p_compass <- ggplot() +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_void() +
theme(panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA))
print(p_compass)
ggsave(filename = paste0(save_plot_path, "compass.png"), plot = p_compass, height = 20, width = 20, unit = 'cm', dpi = 300)
# Create the base ggplot
lake_BT_trace_full <-
ggplot() +
geom_sf(data = BT_poly_epsg32634, fill = NA, color = "black", lwd = 1) +
geom_sf(data = BT_rec_locs, aes(color = "red", size = 3)) +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "tl", which_north = "true",
pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm"),
style = north_arrow_fancy_orienteering) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none'
)
print(lake_BT_trace_full)
#save image
ggsave(filename = paste0(save_plot_path, "lake_BT_trace_full.png"), plot = lake_BT_trace_full, height = 20, width = 20, unit = 'cm', dpi = 300)
# Create the lake outline and receiver locations plot separately
lake_BT_trace <- lake_BT_trace_full +
annotation_scale(location = "none") +
annotation_north_arrow(location = "none")
print(lake_BT_trace)
?annotation_scale
#save image
ggsave(filename = paste0(save_plot_path, "lake_BT_trace_full.pdf"), plot = lake_BT_trace_full, height = 20, width = 20, unit = 'cm', dpi = 300)
